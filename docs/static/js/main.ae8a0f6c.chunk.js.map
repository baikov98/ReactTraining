{"version":3,"sources":["PathContext.js","components/SearchInput/SearchInput.js","pages/CompetitionsPage/CompetitionsItem.js","components/TableTemplate/TableTemplate.js","components/NotFoundForQuery/NotFoundForQuery.js","pages/CompetitionsPage/CompetitionsTable.js","components/YearSelect/YearSelect.js","components/Loader/Loader.js","components/ShowError/ShowError.js","hooks/useFetchData.js","pages/CompetitionsPage/CompetitionsPage.js","pages/TeamListPage/TeamListItem.js","pages/TeamListPage/TeamListTable.js","pages/TeamListPage/TeamListPage.js","pages/StandingsPage/StandingsItem.js","pages/StandingsPage/StandingsTable.js","pages/StandingsPage/StandingsType.js","pages/StandingsPage/reducer.js","pages/StandingsPage/StandingsPage.js","components/DateFilter/DateFilter.js","pages/CalendarPage/CalendarItem.js","pages/CalendarPage/CalendarTable.js","hooks/useDateFilter.js","pages/CalendarPage/CalendarPage.js","pages/PageNotFound/PageNotFound.js","pages/TeamPage/TeamItem.js","pages/TeamPage/TeamTable.js","pages/TeamPage/TeamMembers.js","pages/TeamPage/TeamPage.js","pages/PlayerPage/PlayerItem.js","pages/PlayerPage/PlayerTable.js","pages/PlayerPage/PlayerPage.js","App.js","reportWebVitals.js","index.js"],"names":["PathContext","React","createContext","PathProvider","children","Provider","value","setQuery","history","name","data","loc","URLSearchParams","window","location","search","has","set","delete","append","push","toString","deleteQuery","queryArray","query","SearchInput","setQueryString","queryString","useContext","useHistory","type","className","style","width","placeholder","onChange","e","target","availableIDs","CompetitionsItem","i","Icon","src","area","ensignUrl","NoIcon","showLink","path","includes","id","to","currentSeason","startDate","endDate","TableTemplate","headersArr","map","val","NotFoundForQuery","queries","filter","desc","join","CompetitionsTable","leagueArr","year","ItemsCompetition","toLowerCase","Date","getFullYear","length","SelectOption","YearSelect","yearSwitcher","yearArray","optionsArr","slice","maxWidth","Loader","ShowError","error","message","useFetchData","url","lookArr","setFunc","useEffect","fetch","headers","then","response","json","catch","CompetitionsPage","props","useLocation","useState","get","setData","setYear","competitions","TeamListItem","crestUrl","shortName","venue","TeamListTable","teamsArr","FilteredTeams","TeamListPage","yearParam","useParams","teams","competition","console","log","season","count","currentMatchday","winner","StandingsItem","team","playedGames","won","draw","lost","points","StandingsTable","standingsArr","StandingsOption","StandingsType","types","changeType","result","displayName","num","reducer","state","action","StandingsPage","useReducer","dispatchType","standings","table","DateFilter","dateFromSwitcher","dateToSwitcher","maxDate","minDate","dateFrom","dateTo","getQuery","min","max","CalendarItem","finished","status","hscore","score","fullTime","homeTeam","ascore","awayTeam","date","utcDate","dateOnly","timeOnly","matchday","CalendarTable","itemsArray","filteredItems","item","useDateFilter","from","setMinDate","setMaxDate","setDateFrom","setDateTo","minSwitcher","maxSwitcher","CalendarPage","matches","PageNotFound","TeamItem","lastUpdated","dateAndTime","tier","plan","TeamTable","array","filteredByDate","TeamMember","age","Math","trunc","dateOfBirth","position","role","countryOfBirth","TeamMembers","squad","uniqueArray","thing","index","_thing","JSON","stringify","findIndex","obj","TeamPage","activeCompetitions","founded","website","email","PlayerItem","PlayerTable","PlayerPage","players","currentYear","reversed","reverse","player","nationality","App","exact","component","CompetitionsList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae8a0f6c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PathContext = React.createContext() \r\n\r\nexport const PathProvider = ({ children }) => {\r\n\r\n    const setQuery = (history, name, data) => {\r\n        const loc = new URLSearchParams(window.location.search)\r\n        if (!loc.has(name)) loc.append(name, data);\r\n        else if (!data) loc.delete(name)\r\n        else loc.set(name, data);\r\n        history.push({search: loc.toString()})\r\n      }\r\n    const deleteQuery = (history, queryArray) => {\r\n        const loc = new URLSearchParams(window.location.search)\r\n        for (let query of queryArray) loc.delete(query)\r\n        history.push({search: loc.toString()})\r\n      }\r\n\r\n    return (\r\n        <PathContext.Provider value={{setQuery,\r\n                                      deleteQuery}}>\r\n            {children}\r\n        </PathContext.Provider>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PathContext } from '../../PathContext'\r\n\r\nconst SearchInput = ({ setQueryString, queryString }) => {\r\n    const { setQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n    \r\n    const inputHandle = (e) => {\r\n        setQuery(history, 'query', e.target.value)\r\n        setQueryString(e.target.value || '')\r\n    }\r\n    const style = {\r\n        width: '180px'\r\n    }\r\n    return (\r\n        <><input type=\"text\" className='form-control mr-2 mb-2' style={style}\r\n                             placeholder='Search...'\r\n                             onChange={inputHandle} \r\n                             value={queryString} /></>\r\n    )\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    setQueryString: PropTypes.func, \r\n    queryString: PropTypes.string\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nconst availableIDs = [2000, 2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021]\r\n\r\nconst CompetitionsItem = ({ i }) => {\r\n    const Icon = <img src={i.area.ensignUrl} className='country__icon'/>\r\n    const NoIcon = <div className='country__icon'/>\r\n    const showLink = (path, name) => availableIDs.includes(i.id) ? \r\n                                    <Link to={`/${i.id}/${path}`}><small>{name}</small></Link> : '';\r\n    return (\r\n    <tr>\r\n        <td>{ i.area.ensignUrl ? Icon : NoIcon} {i.area.name}</td>\r\n        <td><strong>{i.name}</strong>\r\n            <div>{showLink('calendar', 'Calendar')} &nbsp;\r\n                 {showLink('teams', 'Teams')} &nbsp;\r\n                 {showLink('standings', 'Standings')}</div></td>           \r\n        <td><div className='text-impact'>{i.currentSeason?.startDate || ''}</div></td>\r\n        <td><div className='text-impact'>{i.currentSeason?.endDate || ''}</div></td>\r\n    </tr>\r\n    )\r\n}\r\n\r\nCompetitionsItem.propTypes = {\r\n    i: PropTypes.object\r\n}\r\nexport default CompetitionsItem ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TableTemplate = ({ children, headersArr }) => {\r\n    return (<table className='table table-striped table-bordered table-hover table-sm'>\r\n              <thead className='thead-dark'>\r\n              <tr>\r\n                {headersArr.map((val, i) => (<th key={val+i}>{val}</th>))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=''>\r\n                {children} \r\n              </tbody>\r\n            </table>)\r\n}\r\n\r\nTableTemplate.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object), \r\n  headersArr: PropTypes.arrayOf(PropTypes.string)\r\n}\r\n\r\nexport default TableTemplate","import React from 'react'\r\n\r\nconst NotFoundForQuery = ({ queryArray }) => {\r\n    const filtered = queryArray.filter((val) => val.desc)\r\n    const queries = filtered.map((val) => {\r\n        return `${val.name} - ${val.desc}`\r\n    })\r\n    return (\r\n        <>\r\n        <p><strong>Not found for:</strong> {queries.join(', ')} </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFoundForQuery","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CompetitionsItem from './CompetitionsItem'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\n\r\nconst CompetitionsTable = ({ leagueArr, query, year }) => {\r\n    const FilteredByQuery = leagueArr\r\n                    .filter((val, i) => {\r\n                    if (query === '') return val;\r\n                    if (val.name.toLowerCase().includes(query.toLowerCase())) return val })\r\n    const FilteredByYear = FilteredByQuery.filter((val) => {\r\n                        return new Date(val.currentSeason.startDate).getFullYear() == year })\r\n    const ItemsCompetition = FilteredByYear.map((i) => (\r\n        <CompetitionsItem key={i.id} i={i} />\r\n    ))\r\n    const headersArr = ['Region', 'Competition', 'Start', 'End']\r\n    return (\r\n        <>\r\n        { ItemsCompetition.length ? (<TableTemplate headersArr={headersArr}>\r\n            {ItemsCompetition}\r\n        </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'search query', \r\n                                                          desc: query}, \r\n                                                          {name: 'year',\r\n                                                          desc: year}]} />} \r\n        </>\r\n    )\r\n}\r\n\r\nCompetitionsTable.propTypes = {\r\n    leagueArr: PropTypes.arrayOf(PropTypes.object), \r\n    query: PropTypes.string, \r\n    year: PropTypes.number\r\n}\r\n  \r\nexport default CompetitionsTable","import React, { useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PathContext } from '../../PathContext'\r\n\r\nfunction SelectOption({ value }) {\r\n    return ( <option value={value}>{value}</option> )\r\n}\r\n\r\nfunction YearSelect({ yearSwitcher, yearArray, year }) {\r\n    const { setQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n\r\n    const inputHandle = (e) => {\r\n        let val = e.target.value.slice(0, 4)\r\n        setQuery(history, 'year', val)\r\n        yearSwitcher(val)\r\n    }\r\n    const optionsArr = yearArray.map((val, i) => \r\n            (<SelectOption value={`${val}/${+val+1}`} key={val} />))\r\n    const style = {\r\n        maxWidth: '160px'\r\n    }\r\n    return (\r\n        <select onChange={inputHandle} \r\n                className='form-control d-inline-flex'\r\n                style={style}\r\n                value={`${year}/${+year+1}`}>\r\n            {optionsArr}\r\n        </select>\r\n    )\r\n}\r\n\r\nYearSelect.propTypes = {\r\n    yearSwitcher: PropTypes.func, \r\n    yearArray: PropTypes.arrayOf(PropTypes.number), \r\n    year: PropTypes.number\r\n}\r\n\r\nSelectOption.propTypes = {\r\n    value: PropTypes.string\r\n}\r\n\r\nexport default YearSelect","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (<div className=\"lds-dual-ring\"></div>)\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ShowError = ({ error }) => {\r\n    return (\r\n        <>\r\n            <h2>Error: {error.name}</h2>\r\n            <p>{error.message}</p>\r\n            {error.message === 'Failed to fetch' ? \r\n                <p>Sorry, you have exceeded the request limit</p> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nShowError.propTypes = {\r\n    error: PropTypes.object\r\n}\r\n\r\nexport default ShowError\r\n","import React, { useEffect } from 'react'\r\n\r\n\r\nconst useFetchData = (url, lookArr, setFunc) => {\r\n    useEffect(() => {\r\n        fetch(url, {headers: { 'X-Auth-Token': 'e161b5cf73d24b83bad26a7af72478e1' }})\r\n            .then(response => response.json())\r\n            .then(json => setFunc(json))\r\n            .catch(e => setFunc(e))\r\n        }, lookArr)\r\n}\r\n\r\nexport default useFetchData","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation } from \"react-router-dom\"; \r\nimport Context from '../../context'\r\nimport SearchInput from '../../components/SearchInput/SearchInput'\r\nimport CompetitionsTable from './CompetitionsTable'\r\nimport YearSelect from '../../components/YearSelect/YearSelect'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst url = 'http://api.football-data.org/v2/competitions'\r\nconst availableIDs = [2001, 2002, 2003, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2021]\r\nconst yearArray = [2020, 2019, 2018, 2017]\r\nconst matches = 'http://api.football-data.org/v2/players/9002/matches'\r\nconst getIt = () => {\r\n  fetch(matches, {headers: { 'X-Auth-Token': 'e161b5cf73d24b83bad26a7af72478e1' }})\r\n      .then(response => response.json())\r\n      .then(json => console.log(json, 2018))\r\n}\r\n\r\nconst CompetitionsPage = (props) => {\r\n    const location = useLocation()\r\n    const loc = new URLSearchParams(window.location.search)\r\n    \r\n    const [queryString, setQueryString] = useState(loc.get('query') || '')\r\n    const [data, setData] = useState(null)\r\n    const [year, setYear] = useState(loc.get('year') || yearArray[0])\r\n    const yearSwitcher = (year) => setYear(year)\r\n    \r\n    useEffect(() => {\r\n      if (location.search === '') {\r\n        yearSwitcher(yearArray[0])\r\n        setQueryString('')\r\n      }\r\n    }, [location.search])\r\n\r\n    useFetchData(url, [], setData)\r\n    \r\n    if (!data) { return <Loader />}\r\n    if (!data.competitions) { return <ShowError error={data} /> }\r\n    const leagueArr = data.competitions.filter((val) => availableIDs.includes(val.id))\r\n    return (\r\n      <>\r\n      <div className='d-flex mb-3 mt-3'>\r\n        <SearchInput setQueryString={setQueryString}\r\n                    queryString={queryString} />\r\n        <YearSelect yearSwitcher={yearSwitcher}\r\n                    yearArray={yearArray} \r\n                    year={+year} />\r\n      </div>\r\n      <CompetitionsTable leagueArr={leagueArr}\r\n                         query={queryString}\r\n                         year={+year} />\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default CompetitionsPage","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamListItem = ({ i }) => {\r\n    return (\r\n      <tr>\r\n        <td>{ i.crestUrl ? <img src={i.crestUrl} className='country__icon'/> : null}</td>\r\n        <td>{i.area.name}</td>\r\n        <td><Link to={`/teams/${i.id}`}>{i.shortName}</Link></td>\r\n        <td>{i.venue}</td>\r\n      </tr>\r\n    )\r\n}\r\n\r\nTeamListItem.propTypes = {\r\n  i: PropTypes.object\r\n}\r\n\r\nexport default TeamListItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\nimport TeamListItem from './TeamListItem'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\n\r\nconst headersArr = [' ', 'Region', 'Team', 'Venue']\r\n\r\nconst TeamListTable = ({ teamsArr, year }) => {\r\n    const query = new URLSearchParams(window.location.search).get('query') || '';\r\n    const FilteredTeams = teamsArr.filter((val, i) => {\r\n        if (query === '') return val;\r\n        if (val.name.toLowerCase().includes(query.toLowerCase())) return val })\r\n    return (\r\n        <>\r\n        {FilteredTeams.length ? (<TableTemplate headersArr={headersArr}>\r\n            {FilteredTeams.map((i) => (<TeamListItem key={i.id} i={i}/>))}\r\n            </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'search query', \r\n                                                            desc: query}, \r\n                                                            {name: 'year',\r\n                                                            desc: year}]} />}\r\n            </>\r\n    )\r\n}\r\n\r\nTeamListTable.propTypes = {\r\n    teamsArr: PropTypes.arrayOf(PropTypes.object), \r\n    year: PropTypes.number\r\n}\r\n\r\nexport default TeamListTable","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport SearchInput from '../../components/SearchInput/SearchInput'\r\nimport YearSelect from '../../components/YearSelect/YearSelect'\r\nimport TeamListTable from './TeamListTable'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst yearArray = [2020, 2019, 2018]\r\n\r\nconst TeamListPage = (props) => {\r\n    const loc = new URLSearchParams(window.location.search)\r\n    const yearParam = loc.get('year') || yearArray[0]; //getting year from url\r\n    let { id } = useParams()\r\n    \r\n    const [queryString, setQueryString] = useState(loc.get('query') || '')\r\n    const [data, setData] = useState(null)\r\n    const [year, setYear] = useState(yearParam) // year state\r\n    const yearSwitcher = (year) => setYear(year)\r\n    \r\n    const teams = `http://api.football-data.org/v2/competitions/${id}/teams?season=${year}`\r\n\r\n    useFetchData(teams, [year], setData)\r\n    \r\n    if (!data) { return <Loader />}\r\n\r\n    if (!data.competition) { return <ShowError error={data} /> }\r\n    console.log(data)\r\n    return (\r\n      <>\r\n      <h2>{data.competition.name} ({data.competition.area.name})</h2>\r\n      <ul>\r\n        <li><strong>Season dates:</strong> {data.season.startDate} - {data.season.endDate}</li>\r\n        <li><strong>Team count:</strong> {data.count}</li>\r\n        <li><strong>Current Matchday:</strong> {data.season.currentMatchday}</li>\r\n      </ul>\r\n      { data.season.winner ? <h4>Winner: <img src={data.season.winner.crestUrl} \r\n                                 className='country__icon'/> \r\n                                 {data.season.winner.name}</h4> : <></> }\r\n      <div className='d-inline-flex'>\r\n        <SearchInput setQueryString={setQueryString} \r\n                      queryString={queryString} />\r\n        <YearSelect yearSwitcher={yearSwitcher} \r\n                    yearArray={yearArray}\r\n                    year={year}\r\n                      />\r\n      </div>\r\n      <TeamListTable teamsArr={data.teams} year={+year}/>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default TeamListPage","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StandingsItem = ({ i }) => {\r\n    return (\r\n      <tr>\r\n        <td>{ i.team.crestUrl ? <img src={i.team.crestUrl} className='country__icon'/> : null}</td>\r\n        <td><Link to={`/teams/${i.team.id}`}>{i.team.name}</Link></td>\r\n        <td>{i.playedGames}</td>\r\n        <td>{i.won}</td>\r\n        <td>{i.draw}</td>\r\n        <td>{i.lost}</td>\r\n        <td>{i.points}</td>\r\n      </tr>\r\n    )\r\n}\r\n\r\nStandingsItem.propTypes = {\r\n  i: PropTypes.object\r\n}\r\n\r\nexport default StandingsItem","import React from 'react'\r\nimport PropTypes, { arrayOf } from 'prop-types'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\nimport StandingsItem from './StandingsItem'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\n\r\nconst headersArr = [' ', 'Team', 'PG', 'W', 'D', 'L', 'P']\r\n\r\nconst StandingsTable = ({ standingsArr }) => {\r\n    const query = new URLSearchParams(window.location.search).get('query') || '';\r\n    const FilteredTeams = standingsArr.filter((val, i) => {\r\n        if (query === '') return val;\r\n        if (val.team.name.toLowerCase().includes(query.toLowerCase())) return val })\r\n    return (\r\n        <>\r\n        {FilteredTeams.length ? (<TableTemplate headersArr={headersArr}>\r\n            {FilteredTeams.map((i) => (<StandingsItem key={i.team.id} i={i}/>))}\r\n            </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'search query', \r\n                                                                desc: query}, ]} />}\r\n            </>\r\n    )\r\n}\r\n\r\nStandingsTable.propTypes = {\r\n    standingsArr: arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default StandingsTable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst StandingsOption = ({ value, name }) => {\r\n    return ( <option value={value}>{value}</option> )\r\n}\r\n\r\nconst StandingsType = ({ types, changeType, type }) => {\r\n\r\n    const inputHandle = (e) => {\r\n        let result = types.filter((val) => val.displayName === e.target.value)\r\n        changeType(result[0].num)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <select onChange={inputHandle} \r\n                value={type.displayName}\r\n                className='form-control'>\r\n            {types.map((val) => (<StandingsOption value={val.displayName} \r\n                                                  key={val.num} />))}\r\n        </select>\r\n        </>\r\n    )\r\n}\r\n\r\nStandingsType.propTypes = {\r\n    types: PropTypes.arrayOf(PropTypes.object), \r\n    changeType: PropTypes.func, \r\n    type: PropTypes.object, \r\n}\r\n\r\nStandingsOption.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport default StandingsType","import React from 'react'\r\n\r\nexport const types = [{num: 0, displayName: 'Total'}, \r\n                      {num: 1, displayName: 'Home Team'},\r\n                      {num: 2, displayName: 'Away Team'}, ]\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 0: return types[0];\r\n        case 1: return types[1];\r\n        case 2: return types[2];\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React, { useEffect, useState, useReducer, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport SearchInput from '../../components/SearchInput/SearchInput'\r\nimport StandingsTable from './StandingsTable'\r\nimport StandingsType from './StandingsType'\r\nimport reducer, { types } from './reducer'\r\nimport { PathContext } from '../../PathContext'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst StandingsPage = (props) => {\r\n    const history = useHistory()\r\n    const { setQuery } = useContext(PathContext)\r\n    const loc = new URLSearchParams(window.location.search)\r\n    let { id } = useParams()\r\n    \r\n    const [queryString, setQueryString] = useState(loc.get('query') || '')\r\n    const [data, setData] = useState(null)\r\n    const [type, dispatchType] = useReducer(reducer, types[loc.get('type') || 0])\r\n    \r\n    const changeType = (data) => {\r\n      dispatchType({type: data})\r\n      setQuery(history, 'type', data)\r\n    }\r\n\r\n    const standings = `http://api.football-data.org/v2/competitions/${id}/standings`\r\n   \r\n    useFetchData(standings, [], setData)\r\n    if (!data) { return <Loader />}\r\n    if (!data.competition) { return <ShowError error={data} /> }\r\n    console.log(data)\r\n    return (\r\n        <>\r\n      <h1>{data.competition.name} ({data.competition.area.name})</h1>\r\n      <h4>Season dates: {data.season.startDate} - {data.season.endDate}</h4>\r\n      <div className='d-flex'>\r\n        <SearchInput setQueryString={setQueryString} \r\n                    queryString={queryString} />\r\n        <StandingsType types={types} \r\n                      changeType={changeType}\r\n                      type={type} />\r\n      </div>\r\n      <StandingsTable standingsArr={data.standings[type.num].table}  />\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default StandingsPage","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PathContext } from '../../PathContext'\r\n\r\n\r\nconst DateFilter = ({ dateFromSwitcher, dateToSwitcher, maxDate, minDate, dateFrom, dateTo }) => {\r\n    const { setQuery, getQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n    \r\n    const inputFromHandle = (e) => {\r\n        let result = e.target.value;\r\n        console.log(result)\r\n        if (new Date(e.target.value) >= new Date(dateTo)) result = dateTo;\r\n        setQuery(history, 'dateFrom', result)\r\n        dateFromSwitcher(result)\r\n      }\r\n    const inputToHandle = (e) => {\r\n        let result = e.target.value;\r\n        if (new Date(e.target.value) <= new Date(dateFrom)) result = dateFrom;\r\n        setQuery(history, 'dateTo', result)\r\n        dateToSwitcher(result)\r\n      }\r\n\r\n    return (\r\n        <div className='d-inline-flex mb-2'>\r\n          <input type=\"date\" id=\"start\" name=\"date-start\"\r\n                className='form-control mr-2'\r\n                value={dateFrom}\r\n                onChange={inputFromHandle}\r\n                min={minDate} \r\n                max={maxDate} />\r\n          <input type=\"date\" id=\"end\" name=\"date-end\"\r\n                className='form-control mr-2'\r\n                value={dateTo}\r\n                onChange={inputToHandle}\r\n                min={minDate}\r\n                max={maxDate} />\r\n        </div>  \r\n    )\r\n}\r\n\r\nDateFilter.propTypes = {\r\n  dateFromSwitcher: PropTypes.func, \r\n  dateToSwitcher: PropTypes.func, \r\n  maxDate: PropTypes.string, \r\n  minDate: PropTypes.string, \r\n  dateFrom: PropTypes.string, \r\n  dateTo: PropTypes.string\r\n}\r\n\r\nexport default DateFilter","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CalendarItem = ({ i }) => {\r\n    let finished = i.status === 'FINISHED' || i.status === 'AWARDED'\r\n    let hscore = i.score.fullTime.homeTeam\r\n    let ascore = i.score.fullTime.awayTeam\r\n    let date = i.utcDate\r\n    let dateOnly = date.slice(8,10)+'-'+date.slice(5,7)+'-'+date.slice(0,4)\r\n    let timeOnly = date.slice(11,16)\r\n\r\n    return (\r\n      <tr>\r\n        <td className='text-impact'>{finished ? dateOnly : dateOnly + ', ' + timeOnly}</td> \r\n        <td><Link to={`/teams/${i.homeTeam.id}`}>{i.homeTeam.name}</Link></td> \r\n        <td className='text-center'>{finished ? hscore : '-'} : {finished ? ascore : '-'}</td>\r\n        <td><Link to={`/teams/${i.awayTeam.id}`}>{i.awayTeam.name}</Link></td>\r\n        <td>{i.matchday}</td> \r\n      </tr>\r\n    )\r\n  }\r\n\r\nCalendarItem.propTypes = {\r\n  i: PropTypes.object\r\n}\r\n\r\nexport default CalendarItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\nimport CalendarItem from './CalendarItem'\r\n\r\nconst headersArr = ['Date', 'Home team', 'Score', 'Away team', 'MD']\r\n\r\nconst CalendarTable = ({ itemsArray, dateFrom, dateTo, year }) => {\r\n    const filteredItems = itemsArray.filter((item) => {\r\n      let date = item.utcDate.slice(0, 10)\r\n      return (new Date(date) >= new Date(dateFrom) && \r\n              new Date(date) <= new Date(dateTo) )\r\n    })\r\n    return (\r\n        <>\r\n          {filteredItems.length ? \r\n          (<TableTemplate headersArr={headersArr}>\r\n          {filteredItems.map((i) => (<CalendarItem i={i} key={i.id} />))}\r\n          </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'From', \r\n                                                              desc: dateFrom},\r\n                                                             {name: 'To', \r\n                                                              desc: dateTo}, \r\n                                                             {name: 'year',\r\n                                                              desc: year}]} /> }\r\n        </>\r\n    )\r\n}\r\nCalendarTable.propTypes = {\r\n  itemsArray: PropTypes.arrayOf(PropTypes.object), \r\n  dateFrom: PropTypes.string, \r\n  dateTo: PropTypes.string, \r\n  year: PropTypes.number\r\n}\r\n\r\nexport default CalendarTable","import React, { useState } from 'react'\r\n\r\nconst useDateFilter = (year, from, to) => {\r\n    \r\n    let [minDate, setMinDate] = useState(`${year ? year : +new Date().getFullYear-1}-01-01`)\r\n    let [maxDate, setMaxDate] = useState(`${year ? +year+1 : new Date().getFullYear}-12-31`)\r\n    let [dateFrom, setDateFrom] = useState(from || minDate)\r\n    let [dateTo, setDateTo] = useState(to || maxDate)\r\n    const dateFromSwitcher = (date) => setDateFrom(date)\r\n    const dateToSwitcher = (date) => setDateTo(date)\r\n    const minSwitcher = (date) => {\r\n        const loc = new URLSearchParams(window.location.search)\r\n        setMinDate(date)\r\n        setDateFrom(loc.get('dateFrom') || date)\r\n    }\r\n    const maxSwitcher = (date) => {\r\n        const loc = new URLSearchParams(window.location.search)\r\n        setMaxDate(date)\r\n        setDateTo(loc.get('dateTo') || date)\r\n    }\r\n    return {minDate, maxDate, dateFrom, dateTo, dateFromSwitcher, dateToSwitcher, minSwitcher, maxSwitcher}\r\n}\r\n\r\nexport default useDateFilter","import React from 'react'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { PathContext } from '../../PathContext'\r\nimport YearSelect from '../../components/YearSelect/YearSelect'\r\nimport DateFilter from '../../components/DateFilter/DateFilter'\r\nimport CalendarTable from './CalendarTable'\r\nimport useDateFilter from '../../hooks/useDateFilter'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst yearArray = [2020, 2019, 2018]\r\n\r\nconst CalendarPage = (props) => {\r\n    const { deleteQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n    const loc = new URLSearchParams(window.location.search)\r\n    const [data, setData] = useState(null)\r\n    const [year, setYear] = useState(loc.get('year') || yearArray[0])\r\n\r\n    let { id } = useParams()\r\n    const matches = `http://api.football-data.org/v2/competitions/${id}/matches/?season=${year}` \r\n    \r\n    useFetchData(matches, [year], setData)\r\n    useEffect(() => {\r\n        minSwitcher(data ? data.matches[0].utcDate.slice(0, 10) : `${year}-01-01`)\r\n        maxSwitcher(data ? data.matches[data.matches.length-1].utcDate.slice(0, 10) : `${+year+1}-12-31`)\r\n    }, [data])\r\n    let { minDate, maxDate, \r\n          dateFrom, dateTo, \r\n          dateFromSwitcher, dateToSwitcher,\r\n          minSwitcher, maxSwitcher } = useDateFilter(year, loc.get('dateFrom'), loc.get('dateTo'))\r\n\r\n    const yearSwitcher = (year) => {\r\n        deleteQuery(history, ['dateFrom', 'dateTo'])\r\n        setYear(year);\r\n        setData(null)\r\n    }\r\n\r\n    if (!data) { return <Loader />}\r\n    if (!data.competition) { return <ShowError error={data} /> }\r\n    console.log(data)\r\n    return (\r\n        <>\r\n            <h2>{data.competition.name} calendar</h2>\r\n            \r\n            <DateFilter dateFromSwitcher={dateFromSwitcher}\r\n                        dateToSwitcher={dateToSwitcher}\r\n                        minDate={minDate}\r\n                        maxDate={maxDate}\r\n                        dateFrom={dateFrom}\r\n                        dateTo={dateTo}\r\n                        />\r\n            <YearSelect yearSwitcher={yearSwitcher}\r\n                        yearArray={yearArray}\r\n                        year={+year} />\r\n            <CalendarTable itemsArray={data.matches}\r\n                            dateFrom={dateFrom}\r\n                            dateTo={dateTo}\r\n                            year={+year} />\r\n        </> \r\n    )\r\n}\r\n\r\nexport default CalendarPage","import React from 'react'\r\n\r\nconst PageNotFound = (props) => {\r\n    return (\r\n        <>\r\n        <h2>Error 404</h2>\r\n        <h4>Page not found</h4>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamItem = ({ i }) => {\r\n    let date = i.lastUpdated\r\n    let dateAndTime = date.slice(8,10)+'.'+date.slice(5,7)+'.'+date.slice(0,4) + ', ' + date.slice(11,16)\r\n    let tier = null\r\n    switch (i.plan) {\r\n        case 'TIER_ONE': tier = 1\r\n            break\r\n        case 'TIER_TWO': tier = 2\r\n            break\r\n        case 'TIER_THREE': tier = 3\r\n            break\r\n    }\r\n    return ( \r\n        <tr>\r\n            <td>{i.area.name}</td>\r\n            <td><Link to={`/${i.id}/teams`}>{i.name}</Link></td>\r\n            <td>{tier}</td>\r\n            <td>{dateAndTime}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nTeamItem.propTypes = {\r\n    i: PropTypes.object\r\n}\r\n\r\nexport default TeamItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\nimport TeamItem from './TeamItem'\r\n\r\nconst headersArr = ['Region', 'League', 'Tier', 'Date']\r\n\r\nconst TeamTable = ({ array, year, dateFrom, dateTo }) => {\r\n    const filteredByYear = array.filter((val) => {\r\n        return (new Date(val.lastUpdated).getFullYear() === year)\r\n    })\r\n    const filteredByDate = filteredByYear.filter((val) => {\r\n      return (new Date(val.lastUpdated) >= new Date(dateFrom) && new Date(val.lastUpdated) <= new Date(dateTo))\r\n    })\r\n    \r\n    return (\r\n      <>\r\n        {filteredByDate.length ? (<TableTemplate headersArr={headersArr} >\r\n            {filteredByDate.map((i) => (\r\n                <TeamItem key={i.id} i={i} />\r\n            ))}\r\n        </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'From', \r\n                                                          desc: dateFrom},\r\n                                                          {name: 'To', \r\n                                                          desc: dateTo}, \r\n                                                          {name: 'year',\r\n                                                          desc: year}]} /> }\r\n      </>\r\n    )\r\n}\r\n\r\nTeamTable.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.object), \r\n  year: PropTypes.number,\r\n  dateFrom: PropTypes.string,\r\n  dateTo: PropTypes.string,\r\n}\r\n\r\nexport default TeamTable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamMember = ({ i }) => {\r\n    let age = Math.trunc((new Date() - new Date(i.dateOfBirth)) / 31536000000)\r\n    return (\r\n        <tr>\r\n            <td><Link to={`/player/${i.id}`}>{i.name}</Link></td>\r\n            <td>{i.position || i.role}</td>\r\n            <td>{i.countryOfBirth}</td>\r\n            <td>{age}</td>\r\n        </tr>\r\n    )\r\n}\r\nconst headersArr = ['Name', 'Position', 'Birth country', 'Age']\r\n\r\nconst TeamMembers = ({ squad }) => {\r\n    const uniqueArray = squad.filter((thing, index) => {\r\n        const _thing = JSON.stringify(thing);\r\n        return index === squad.findIndex(obj => {\r\n          return JSON.stringify(obj) === _thing;\r\n        });\r\n    });\r\n    return (\r\n        <>\r\n        {squad ? <TableTemplate headersArr={headersArr}>\r\n            {uniqueArray.map((i) => (<TeamMember i={i} key={i.id} />))}\r\n        </TableTemplate> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nTeamMember.propTypes = {\r\n    i: PropTypes.object\r\n}\r\n\r\nTeamMembers.propTypes = {\r\n    squad: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default TeamMembers","import React, { useEffect, useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport TeamTable from './TeamTable'\r\nimport YearSelect from '../../components/YearSelect/YearSelect'\r\nimport DateFilter from '../../components/DateFilter/DateFilter'\r\nimport TeamMembers from './TeamMembers'\r\nimport { PathContext } from '../../PathContext'\r\nimport useDateFilter from '../../hooks/useDateFilter'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst yearArray = [2021, 2020, 2019, 2018]\r\n\r\nconst TeamPage = (props) => {\r\n    const [ data, setData ] = useState(null)\r\n    const { deleteQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n    const loc = new URLSearchParams(window.location.search)\r\n    const yearParam = loc.get('year') || yearArray[0]\r\n    const [year, setYear] = useState(yearParam)\r\n    let { minDate, maxDate, \r\n          dateFrom, dateTo, \r\n          dateFromSwitcher, dateToSwitcher,\r\n          minSwitcher, maxSwitcher } = useDateFilter(year, loc.get('dateFrom'), loc.get('dateTo'))\r\n\r\n    const yearSwitcher = (year) => {\r\n      deleteQuery(history, ['dateFrom', 'dateTo'])\r\n      setYear(year)\r\n      minSwitcher(`${year}-01-01`)\r\n      maxSwitcher(`${+year+1}-12-31`)\r\n    }\r\n\r\n    const { id } = useParams()\r\n    const team = `http://api.football-data.org/v2/teams/${id}`\r\n    \r\n    useFetchData(team, [], setData)\r\n\r\n    if (!data) {return <Loader />}\r\n    if (!data.activeCompetitions) { return <ShowError error={data} /> }\r\n    console.log(data)\r\n    return (\r\n        <div>\r\n        <h2 className='mb-2'>{data.name} ({data.area.name})</h2>\r\n        {data.crestUrl ? <img src={data.crestUrl} className='mb-2'/> : null} \r\n        <ul className='team-info'>\r\n          <li><strong>Founded:</strong> {data.founded}</li>\r\n          <li><strong>Venue:</strong> {data.venue}</li>\r\n          <li><strong>Website:</strong> {data.website}</li>\r\n          <li><strong>Email:</strong> {data.email}</li>\r\n        </ul>\r\n        <div className='.d-inline-flex'>\r\n          <DateFilter dateFromSwitcher={dateFromSwitcher}\r\n                      dateToSwitcher={dateToSwitcher}\r\n                      minDate={minDate}\r\n                      maxDate={maxDate}\r\n                      dateFrom={dateFrom}\r\n                      dateTo={dateTo}\r\n                          />\r\n          <YearSelect yearSwitcher={yearSwitcher} \r\n                      yearArray={yearArray} \r\n                      year={+year} />\r\n        </div>\r\n        <h4>Active Competitions</h4>\r\n        <TeamTable year={+year}\r\n                   array={data.activeCompetitions}\r\n                   dateFrom={dateFrom}\r\n                   dateTo={dateTo} />\r\n        <h4>Team</h4>\r\n        {data.squad.length ? <TeamMembers squad={data.squad} /> : <></>}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TeamPage","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PlayerItem = ({ i }) => {\r\n    let finished = i.status === 'FINISHED' || i.status === 'AWARDED'\r\n    let hscore = i.score.fullTime.homeTeam\r\n    let ascore = i.score.fullTime.awayTeam\r\n    let date = i.utcDate\r\n    let dateOnly = date.slice(8,10)+'.'+date.slice(5,7)+'.'+date.slice(0,4)\r\n    let timeOnly = date.slice(11,16)\r\n\r\n    return (\r\n      <tr>\r\n        <td>{finished ? dateOnly : dateOnly + ', ' + timeOnly}</td> \r\n        <td><Link to={`/teams/${i.homeTeam.id}`}>{i.homeTeam.name}</Link></td> \r\n        <td>{finished ? hscore : '-'} : {finished ? ascore : '-'}</td>\r\n        <td><Link to={`/teams/${i.awayTeam.id}`}>{i.awayTeam.name}</Link></td>\r\n        <td>{i.matchday}</td> \r\n      </tr>\r\n    )\r\n  }\r\n\r\n  PlayerItem.propTypes = {\r\n  i: PropTypes.object\r\n}\r\n\r\nexport default PlayerItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NotFoundForQuery from '../../components/NotFoundForQuery/NotFoundForQuery'\r\nimport TableTemplate from '../../components/TableTemplate/TableTemplate'\r\nimport PlayerItem from './PlayerItem'\r\n\r\nconst headersArr = ['Date', 'Home team', 'Score', 'Away team', 'Matchday']\r\n\r\nconst PlayerTable = ({ itemsArray, dateFrom, dateTo }) => {\r\n    const uniqueArray = itemsArray.filter((thing, index) => {\r\n        const _thing = JSON.stringify(thing);\r\n        return index === itemsArray.findIndex(obj => {\r\n          return JSON.stringify(obj) === _thing;\r\n        });\r\n    });\r\n    const filteredItems = uniqueArray.filter((item) => {\r\n      let date = item.utcDate.slice(0, 10)\r\n      return (new Date(date) >= new Date(dateFrom) && \r\n              new Date(date) <= new Date(dateTo) )\r\n    })\r\n    return (\r\n        <>\r\n          {filteredItems.length ? \r\n          (<TableTemplate headersArr={headersArr}>\r\n          {filteredItems.map((i) => (<PlayerItem i={i} key={i.id} />))}\r\n          </TableTemplate>) : <NotFoundForQuery queryArray={[{name: 'From', \r\n                                                              desc: dateFrom},\r\n                                                             {name: 'To', \r\n                                                              desc: dateTo}, \r\n                                                                          ]} /> }\r\n        </>\r\n    )\r\n}\r\n\r\nPlayerTable.propTypes = {\r\n  itemsArray: PropTypes.arrayOf(PropTypes.object), \r\n  dateFrom: PropTypes.string, \r\n  dateTo: PropTypes.string, \r\n}\r\n\r\nexport default PlayerTable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { PathContext } from '../../PathContext'\r\nimport YearSelect from '../../components/YearSelect/YearSelect'\r\nimport DateFilter from '../../components/DateFilter/DateFilter'\r\nimport PlayerTable from './PlayerTable'\r\nimport useDateFilter from '../../hooks/useDateFilter'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport ShowError from '../../components/ShowError/ShowError'\r\nimport useFetchData from '../../hooks/useFetchData'\r\n\r\nconst PlayerPage = (props) => {\r\n    const { deleteQuery } = useContext(PathContext)\r\n    const history = useHistory()\r\n    const loc = new URLSearchParams(window.location.search)\r\n    const [data, setData] = useState(null)\r\n\r\n    let { id } = useParams()\r\n    const players = `http://api.football-data.org/v2/players/${id}/matches` \r\n\r\n    useFetchData(players, [], setData)\r\n\r\n    useEffect(() => {\r\n        let currentYear = +new Date().getFullYear()\r\n        let reversed = data?.matches ? data.matches.slice(0).reverse() : []\r\n        minSwitcher(reversed.length ? reversed[0].utcDate.slice(0, 10) \r\n                                    : `${currentYear-4}-01-01`)\r\n        maxSwitcher(reversed.length ? reversed[reversed.length-1].utcDate.slice(0, 10) \r\n                                    : `${currentYear}-12-31`)\r\n    }, [data])\r\n\r\n    let { minDate, maxDate, \r\n          dateFrom, dateTo, \r\n          dateFromSwitcher, dateToSwitcher,\r\n          minSwitcher, maxSwitcher } = useDateFilter(null, loc.get('dateFrom'), loc.get('dateTo'))\r\n\r\n    if (!data) { return <Loader />}\r\n    if (!data.player) { return <ShowError error={data} /> }\r\n\r\n    return (\r\n        <>\r\n            <h2>{data.player.name} calendar</h2>\r\n            <ul>\r\n                <li><strong>Birth date:</strong> {data.player.dateOfBirth}</li>\r\n                <li><strong>Birth country:</strong> {data.player.countryOfBirth}</li>\r\n                <li><strong>Nationality:</strong> {data.player.nationality}</li>\r\n                <li><strong>Position:</strong> {data.player.position}</li>\r\n            </ul>\r\n            <DateFilter dateFromSwitcher={dateFromSwitcher}\r\n                        dateToSwitcher={dateToSwitcher}\r\n                        minDate={minDate}\r\n                        maxDate={maxDate}\r\n                        dateFrom={dateFrom}\r\n                        dateTo={dateTo}\r\n                        />\r\n            \r\n            <PlayerTable itemsArray={data.matches}\r\n                         dateFrom={dateFrom}\r\n                         dateTo={dateTo}\r\n                                         />\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PlayerPage","import { useEffect, useState, useRef } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport { PathProvider } from './PathContext'\nimport CompetitionsList from './pages/CompetitionsPage/CompetitionsPage'\nimport TeamListPage from './pages/TeamListPage/TeamListPage'\nimport StandingsPage from './pages/StandingsPage/StandingsPage'\nimport CalendarPage from './pages/CalendarPage/CalendarPage'\nimport PageNotFound from './pages/PageNotFound/PageNotFound'\nimport TeamPage from './pages/TeamPage/TeamPage'\nimport PlayerPage from './pages/PlayerPage/PlayerPage'\n\nfunction App() {\n  \n  return (\n    <PathProvider>\n      <Router>\n        <div className='container mt-2'>\n        <h2><Link to='/'>Top soccer tournaments statistics</Link></h2>\n        <Switch>\n          <Route path=\"/:id/teams\" exact component={TeamListPage} />\n            \n          <Route path=\"/:id/calendar\" exact component={CalendarPage} />\n\n          <Route path=\"/:id/standings\" exact component={StandingsPage} />\n\n          <Route path=\"/teams/:id\" exact component={TeamPage} />\n\n          <Route path=\"/player/:id\" exact component={PlayerPage} />\n            \n          <Route path=\"/\" exact component={CompetitionsList} />\n            \n          <Route component={PageNotFound} />\n\n        </Switch>\n        </div>\n      </Router>\n    </PathProvider>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}